//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TravailBDPart4
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bd_natationEntities1 : DbContext
    {
        public bd_natationEntities1()
            : base("name=bd_natationEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Categori_Compet> tbl_Categori_Compet { get; set; }
        public virtual DbSet<tbl_Categorie_Nageur> tbl_Categorie_Nageur { get; set; }
        public virtual DbSet<tbl_Competition> tbl_Competition { get; set; }
        public virtual DbSet<tbl_Nageur> tbl_Nageur { get; set; }
        public virtual DbSet<tbl_Resultat> tbl_Resultat { get; set; }
        public virtual DbSet<vueNageurCompe> vueNageurCompes { get; set; }
    
        public virtual int updateView(Nullable<int> id_compe, Nullable<int> id_nageur, Nullable<int> position)
        {
            var id_compeParameter = id_compe.HasValue ?
                new ObjectParameter("id_compe", id_compe) :
                new ObjectParameter("id_compe", typeof(int));
    
            var id_nageurParameter = id_nageur.HasValue ?
                new ObjectParameter("id_nageur", id_nageur) :
                new ObjectParameter("id_nageur", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateView", id_compeParameter, id_nageurParameter, positionParameter);
        }
    
        public virtual int DesincriptionCompe(Nullable<int> no_nageur)
        {
            var no_nageurParameter = no_nageur.HasValue ?
                new ObjectParameter("no_nageur", no_nageur) :
                new ObjectParameter("no_nageur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesincriptionCompe", no_nageurParameter);
        }
    }
}
